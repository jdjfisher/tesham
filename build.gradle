plugins {
    id 'java'
    id 'application'
}

group = 'tesham'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass = 'Launcher'
}

ext {
    lwjglVersion = '3.3.4'
    lwjglNatives = getOsClassifier()
}

repositories {
    mavenCentral()
}

dependencies {
    // LWJGL core dependencies
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    
    // LWJGL native dependencies
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    
    // Other dependencies
    implementation 'org.apache.commons:commons-math3:3.0'
    implementation 'commons-io:commons-io:2.5'
}

def getOsClassifier() {
    def os = System.getProperty('os.name').toLowerCase()
    def arch = System.getProperty('os.arch').toLowerCase()
    
    if (os.contains('windows')) {
        return arch.contains('64') ? 'natives-windows' : 'natives-windows-x86'
    } else if (os.contains('linux')) {
        return arch.contains('64') ? 'natives-linux' : 'natives-linux-x86'
    }
    
    throw new RuntimeException("Unsupported platform: $os $arch")
}